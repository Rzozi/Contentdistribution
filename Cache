from flask import Flask, jsonify, request, redirect, Response, send_from_directory, make_response
import flask.ext.restless
from json import dumps
from flask.ext.sqlalchemy import SQLAlchemy
import os
from werkzeug import secure_filename



UPLOAD_FOLDER = "/home/loukili/API/uploads"

app = Flask(__name__)

app.config.from_pyfile('config.py')
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER
db = SQLAlchemy(app)



class cachedcontent(db.Model):

	__tablename__ = 'cachedcontent'
	id = db.Column(db.Integer, primary_key=True)
	name = db.Column(db.String(20))
	size = db.Column(db.String(20))

@app.route('/api/uploads',strict_slashes = False , methods=['GET','POST'])
def upload():
    if request.method == 'POST':
        file = request.files['file']
        if file:
            filename = secure_filename(file.filename)
            file.save(os.path.join(app.confi['UPLOAD_FOLDER'],filename))
            return redirect(url_for('upload'))
    return """
    <!doctype html>
    <title>Upload new File</title>
    <h1>Upload new File</h1>
    <form action="" method=post enctype=multipart/form-data>
      <p><input type=file name=file>
         <input type=submit value=Upload>
    </form>
    <p>%s</p>
    """ % "<br>".join(os.listdir(app.config['UPLOAD_FOLDER'],))

@app.route('/api/uploads/<string:file>', strict_slashes = False, methods=['GET'])
def download(file):
     #return send_from_directory(UPLOAD_FOLDER, file)
	return str([file]*500)


@app.route('/api/clearcache/', methods=['GET'])
def clearcache():

	cachedcontent.query.delete()
	db.session.commit()

	return ' operation done '


@app.route('/api/listdir' ,methods=['GET'])
def dirlist2():
	filelist = []
	for file in os.listdir(UPLOAD_FOLDER):
	
	  #dirfile = os.path(file)
	 #if os.path.isfile(dirfile):

	  filelist.append(file)
	return make_response(dumps(filelist))	

db.create_all()

manager = flask.ext.restless.APIManager(app, flask_sqlalchemy_db=db)
manager.create_api(cachedcontent, methods=['GET','POST','DELETE','PUT'])


if __name__ == '__main__':

	app.run(host='192.168.1.26',port=5000)
